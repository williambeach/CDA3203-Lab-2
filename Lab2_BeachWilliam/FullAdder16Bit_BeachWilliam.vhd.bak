LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE work.fullAdderPackage.all;

ENTITY FullAdder16Bit_BeachWilliam IS 
	PORT (Cin	: IN STD_LOGIC;
		  A, B	: IN STD_LOGIC_VECTOR(15 DOWNTO 0);
		  s		: OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
		  cout	: OUT STD_LOGIC);
END FullAdder16Bit_BeachWilliam;

ARCHITECTURE LogicFunc OF FullAdder16Bit_BeachWilliam IS
SIGNAL C: STD_LOGIC_VECTOR(1 TO 15);
BEGIN
	adder1:FullAdder_1BitBeachWilliam PORT MAP(A(0), B(0), Cin, s(0), C(1));
	adder2:FullAdder_1BitBeachWilliam PORT MAP(A(1), B(1), C(1), s(1), C(2));
	adder3:FullAdder_1BitBeachWilliam PORT MAP(A(2), B(2), C(2), s(2), C(3));
	adder4:FullAdder_1BitBeachWilliam PORT MAP(A(3), B(3), C(3), s(3), C(4));
	adder5:FullAdder_1BitBeachWilliam PORT MAP(A(4), B(4), C(4), s(4), C(5));
	adder6:FullAdder_1BitBeachWilliam PORT MAP(A(5), B(5), C(5), s(5), C(6));
	adder7:FullAdder_1BitBeachWilliam PORT MAP(A(6), B(6), C(6), s(6), C(7));
	adder8:FullAdder_1BitBeachWilliam PORT MAP(A(7), B(7), C(7), s(7), C(8));
	adder9:FullAdder_1BitBeachWilliam PORT MAP(A(8), B(8), C(8), s(8), C(9));
	adder10:FullAdder_1BitBeachWilliam PORT MAP(A(9), B(9), C(9), s(9), C(10));
	adder11:FullAdder_1BitBeachWilliam PORT MAP(A(10), B(10), C(10), s(10), C(11));
	adder12:FullAdder_1BitBeachWilliam PORT MAP(A(11), B(11), C(11), s(11), C(12));
	adder13:FullAdder_1BitBeachWilliam PORT MAP(A(12), B(12), C(12), s(12), C(13));
	adder14:FullAdder_1BitBeachWilliam PORT MAP(A(13), B(13), C(13), s(13), C(14));
	adder15:FullAdder_1BitBeachWilliam PORT MAP(A(14), B(14), C(14), s(14), C(15));
	adder16:FullAdder_1BitBeachWilliam PORT MAP(A(15), B(15), C(15), s(15), cout);
END LogicFunc;